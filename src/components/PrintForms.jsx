import React, { useState } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { 
  setActiveTab, 
  setSelectedForm, 
  setSelectedDocument,
  setShowPrintPreview,
  setShowReportFilters,
  setShowPrintSettings,
  updatePrintSettings,
  setFilters,
  addPrintHistory,
  generatePrintForm,
  generateReport,
  saveFormAsPDF,
  sendFormByEmail
} from '../redux/slices/printFormsSlice';
import '../styles/print-forms.scss';

const PrintForms = () => {
  const dispatch = useDispatch();
  const { 
    printForms, 
    reportForms, 
    documents, 
    printSettings, 
    filters, 
    ui, 
    printHistory 
  } = useSelector(state => state.printForms);
  
  const [reportFilters, setReportFilters] = useState({
    period: '',
    organization: '',
    region: '',
    power_range: '',
    contract_type: '',
    investment_type: '',
    contract_status: '',
    dzo_type: '',
    activity_type: '',
    business_type: '',
    application_status: '',
    year: new Date().getFullYear(),
    application_type: '',
    kpi_type: ''
  });

  const [emailData, setEmailData] = useState({
    email: '',
    subject: '',
    message: ''
  });

  const handleTabChange = (tab) => {
    dispatch(setActiveTab(tab));
  };

  const handleFormSelect = (form) => {
    dispatch(setSelectedForm(form));
  };

  const handleDocumentSelect = (document) => {
    dispatch(setSelectedDocument(document));
  };

  const handlePrintForm = (formId, documentId) => {
    dispatch(generatePrintForm({ formId, documentId, settings: printSettings }));
    dispatch(addPrintHistory({ 
      formName: printForms.find(f => f.id === formId)?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞',
      documentNumber: documents.find(d => d.id === documentId)?.number || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç',
      copies: printSettings.copies
    }));
    dispatch(setShowPrintPreview(true));
  };

  const handleGenerateReport = (reportId) => {
    dispatch(generateReport({ reportId, filters: reportFilters, settings: printSettings }));
    dispatch(setShowPrintPreview(true));
  };

  const handleSaveAsPDF = (formId, documentId) => {
    const filename = `${documents.find(d => d.id === documentId)?.number || 'document'}_${printForms.find(f => f.id === formId)?.name || 'form'}.pdf`;
    dispatch(saveFormAsPDF({ formId, documentId, filename }));
  };

  const handleSendByEmail = (formId, documentId) => {
    dispatch(sendFormByEmail({ formId, documentId, ...emailData }));
    setEmailData({ email: '', subject: '', message: '' });
  };

  const handleFilterChange = (filterType, value) => {
    dispatch(setFilters({ [filterType]: value }));
  };

  const handlePrintSettingsChange = (setting, value) => {
    dispatch(updatePrintSettings({ [setting]: value }));
  };

  const filteredPrintForms = printForms.filter(form => {
    if (filters.category !== 'all' && form.category !== filters.category) return false;
    if (filters.documentType !== 'all' && form.documentType !== filters.documentType) return false;
    return true;
  });

  const filteredReportForms = reportForms.filter(report => {
    if (filters.category !== 'all' && report.category !== filters.category) return false;
    return true;
  });

  const filteredDocuments = documents.filter(doc => {
    if (filters.documentType !== 'all' && doc.type !== filters.documentType) return false;
    if (filters.status !== 'all' && doc.status !== filters.status) return false;
    return true;
  });

  const renderPrintFormsTab = () => (
    <div className="tab-content">
      <div className="filters-section">
        <div className="filter-group">
          <label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</label>
          <select 
            value={filters.category} 
            onChange={(e) => handleFilterChange('category', e.target.value)}
          >
            <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
            <option value="–ê–∫—Ç—ã">–ê–∫—Ç—ã</option>
            <option value="–ó–∞—è–≤–∫–∏">–ó–∞—è–≤–∫–∏</option>
            <option value="–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è</option>
            <option value="–î–æ–≥–æ–≤–æ—Ä—ã">–î–æ–≥–æ–≤–æ—Ä—ã</option>
            <option value="–§–∏–Ω–∞–Ω—Å—ã">–§–∏–Ω–∞–Ω—Å—ã</option>
          </select>
        </div>
        
        <div className="filter-group">
          <label>–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞:</label>
          <select 
            value={filters.documentType} 
            onChange={(e) => handleFilterChange('documentType', e.target.value)}
          >
            <option value="all">–í—Å–µ —Ç–∏–ø—ã</option>
            <option value="–ê–∫—Ç">–ê–∫—Ç</option>
            <option value="–ó–∞—è–≤–∫–∞">–ó–∞—è–≤–∫–∞</option>
            <option value="–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è</option>
            <option value="–î–æ–≥–æ–≤–æ—Ä">–î–æ–≥–æ–≤–æ—Ä</option>
            <option value="–°—á–µ—Ç">–°—á–µ—Ç</option>
          </select>
        </div>
      </div>

      <div className="forms-grid">
        {filteredPrintForms.map(form => (
          <div 
            key={form.id} 
            className={`form-card ${ui.selectedForm?.id === form.id ? 'selected' : ''}`}
            onClick={() => handleFormSelect(form)}
          >
            <div className="card-header">
              <div className="form-icon">
                <span className="icon">{form.icon}</span>
              </div>
              <div className="form-info">
                <h3>{form.name}</h3>
                <span className="category">{form.category}</span>
              </div>
            </div>

            <div className="card-content">
              <p className="description">{form.description}</p>
              <div className="form-meta">
                <span className="document-type">{form.documentType}</span>
                <span className="status active">–ê–∫—Ç–∏–≤–Ω–∞</span>
              </div>
            </div>

            <div className="card-actions">
              <button 
                className="btn-preview"
                onClick={(e) => {
                  e.stopPropagation();
                  dispatch(setShowPrintPreview(true));
                }}
                title="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä"
              >
                <span className="icon">üëÅÔ∏è</span>
              </button>
              <button 
                className="btn-edit"
                onClick={(e) => {
                  e.stopPropagation();
                  // –õ–æ–≥–∏–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞–∫–µ—Ç–∞
                }}
                title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–∫–µ—Ç"
              >
                <span className="icon">‚úèÔ∏è</span>
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  const renderReportFormsTab = () => (
    <div className="tab-content">
      <div className="filters-section">
        <div className="filter-group">
          <label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ—Ç—á–µ—Ç–æ–≤:</label>
          <select 
            value={filters.category} 
            onChange={(e) => handleFilterChange('category', e.target.value)}
          >
            <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
            <option value="–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</option>
            <option value="–§–∏–Ω–∞–Ω—Å—ã">–§–∏–Ω–∞–Ω—Å—ã</option>
            <option value="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</option>
            <option value="–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</option>
            <option value="–†–µ–µ—Å—Ç—Ä—ã">–†–µ–µ—Å—Ç—Ä—ã</option>
            <option value="–ö–ü–≠">–ö–ü–≠</option>
          </select>
        </div>
      </div>

      <div className="reports-grid">
        {filteredReportForms.map(report => (
          <div 
            key={report.id} 
            className={`report-card ${ui.selectedForm?.id === report.id ? 'selected' : ''}`}
            onClick={() => handleFormSelect(report)}
          >
            <div className="card-header">
              <div className="report-icon">
                <span className="icon">{report.icon}</span>
              </div>
              <div className="report-info">
                <h3>{report.name}</h3>
                <span className="category">{report.category}</span>
              </div>
            </div>

            <div className="card-content">
              <p className="description">{report.description}</p>
              <div className="filters-info">
                <span className="filters-count">–§–∏–ª—å—Ç—Ä–æ–≤: {report.filters.length}</span>
              </div>
            </div>

            <div className="card-actions">
              <button 
                className="btn-filters"
                onClick={(e) => {
                  e.stopPropagation();
                  dispatch(setShowReportFilters(true));
                }}
                title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤"
              >
                <span className="icon">üîç</span>
              </button>
              <button 
                className="btn-generate"
                onClick={(e) => {
                  e.stopPropagation();
                  handleGenerateReport(report.id);
                }}
                title="–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç"
              >
                <span className="icon">üìä</span>
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  const renderDocumentsTab = () => (
    <div className="tab-content">
      <div className="filters-section">
        <div className="filter-group">
          <label>–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞:</label>
          <select 
            value={filters.documentType} 
            onChange={(e) => handleFilterChange('documentType', e.target.value)}
          >
            <option value="all">–í—Å–µ —Ç–∏–ø—ã</option>
            <option value="–î–æ–≥–æ–≤–æ—Ä">–î–æ–≥–æ–≤–æ—Ä</option>
            <option value="–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è</option>
            <option value="–ó–∞—è–≤–∫–∞">–ó–∞—è–≤–∫–∞</option>
            <option value="–ê–∫—Ç">–ê–∫—Ç</option>
          </select>
        </div>
        
        <div className="filter-group">
          <label>–°—Ç–∞—Ç—É—Å:</label>
          <select 
            value={filters.status} 
            onChange={(e) => handleFilterChange('status', e.target.value)}
          >
            <option value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
            <option value="–ê–∫—Ç–∏–≤–µ–Ω">–ê–∫—Ç–∏–≤–µ–Ω</option>
            <option value="–í—ã–ø–æ–ª–Ω–µ–Ω—ã">–í—ã–ø–æ–ª–Ω–µ–Ω—ã</option>
            <option value="–í –æ–±—Ä–∞–±–æ—Ç–∫–µ">–í –æ–±—Ä–∞–±–æ—Ç–∫–µ</option>
            <option value="–ü–æ–¥–ø–∏—Å–∞–Ω">–ü–æ–¥–ø–∏—Å–∞–Ω</option>
          </select>
        </div>
      </div>

      <div className="documents-table">
        <div className="table-header">
          <div className="table-row header">
            <div className="cell">–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞</div>
            <div className="cell">–¢–∏–ø</div>
            <div className="cell">–ó–∞—è–≤–∏—Ç–µ–ª—å</div>
            <div className="cell">–°—Ç–∞—Ç—É—Å</div>
            <div className="cell">–î–∞—Ç–∞</div>
            <div className="cell">–ú–æ—â–Ω–æ—Å—Ç—å</div>
            <div className="cell">–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º—ã</div>
            <div className="cell">–î–µ–π—Å—Ç–≤–∏—è</div>
          </div>
        </div>
        
        <div className="table-body">
          {filteredDocuments.map(doc => (
            <div key={doc.id} className="table-row">
              <div className="cell">
                <span className="document-number">{doc.number}</span>
              </div>
              
              <div className="cell">
                <span className="document-type">{doc.type}</span>
              </div>
              
              <div className="cell">
                <span className="applicant">{doc.applicant}</span>
              </div>
              
              <div className="cell">
                <span className={`status ${(doc.status || '').toLowerCase().replace(' ', '-')}`}>
                  {doc.status || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}
                </span>
              </div>
              
              <div className="cell">
                <span className="date">{doc.date}</span>
              </div>
              
              <div className="cell">
                <span className="power">{doc.power}</span>
              </div>
              
              <div className="cell">
                <div className="available-forms">
                  <span className="forms-count">
                    {doc.printForms.length} —Ñ–æ—Ä–º
                  </span>
                  <div className="forms-preview">
                    {doc.printForms.slice(0, 3).map(formId => {
                      const form = printForms.find(f => f.id === formId);
                      return form ? (
                        <span key={formId} className="form-badge" title={form.name}>
                          {form.icon}
                        </span>
                      ) : null;
                    })}
                    {doc.printForms.length > 3 && (
                      <span className="more-forms">+{doc.printForms.length - 3}</span>
                    )}
                  </div>
                </div>
              </div>
              
              <div className="cell">
                <div className="actions">
                  <button 
                    className="btn-print"
                    onClick={() => handleDocumentSelect(doc)}
                    title="–ü–µ—á–∞—Ç—å —Ñ–æ—Ä–º"
                  >
                    üñ®Ô∏è
                  </button>
                  <button 
                    className="btn-preview"
                    title="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä"
                  >
                    üëÅÔ∏è
                  </button>
                  <button 
                    className="btn-save"
                    title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
                  >
                    üíæ
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

  const renderPrintPreview = () => (
    <div className="modal-overlay">
      <div className="print-preview-modal">
        <div className="modal-header">
          <h3>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä</h3>
          <button 
            className="close-btn"
            onClick={() => dispatch(setShowPrintPreview(false))}
          >
            ‚úï
          </button>
        </div>
        
        <div className="modal-content">
          <div className="preview-toolbar">
            <div className="toolbar-group">
              <button className="btn-print" title="–ü–µ—á–∞—Ç—å">
                üñ®Ô∏è –ü–µ—á–∞—Ç—å
              </button>
              <button className="btn-save" title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å">
                üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </button>
              <button className="btn-email" title="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ email">
                üìß Email
              </button>
            </div>
            
            <div className="toolbar-group">
              <label>–ö–æ–ø–∏–π:</label>
              <input 
                type="number" 
                min="1" 
                max="10"
                value={printSettings.copies}
                onChange={(e) => handlePrintSettingsChange('copies', parseInt(e.target.value))}
              />
            </div>
          </div>
          
          <div className="preview-content">
            <div className="preview-page">
              <div className="page-header">
                <h1>–ê–∫—Ç –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏–π</h1>
                <p>‚Ññ –î-2024-001 –æ—Ç 15.01.2024</p>
              </div>
              
              <div className="page-content">
                <div className="document-section">
                  <h2>1. –û–±—â–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è</h2>
                  <p><strong>–ó–∞—è–≤–∏—Ç–µ–ª—å:</strong> –û–û–û "–≠–Ω–µ—Ä–≥–æ–°—Ç—Ä–æ–π"</p>
                  <p><strong>–ê–¥—Ä–µ—Å:</strong> –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∞—è, –¥. 15</p>
                  <p><strong>–ú–æ—â–Ω–æ—Å—Ç—å:</strong> 150 –∫–í—Ç</p>
                  <p><strong>–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ:</strong> 0,4 –∫–í</p>
                </div>
                
                <div className="document-section">
                  <h2>2. –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã</h2>
                  <ul>
                    <li>–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –í–õ 0,4 –∫–í –ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å—é 500–º</li>
                    <li>–ú–æ–Ω—Ç–∞–∂ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–Ω–æ–π –ø–æ–¥—Å—Ç–∞–Ω—Ü–∏–∏ 160 –∫–í–ê</li>
                    <li>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–π —Å–µ—Ç–∏</li>
                  </ul>
                </div>
                
                <div className="document-section">
                  <h2>3. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ</h2>
                  <p>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –≤ –ø–æ–ª–Ω–æ–º –æ–±—ä–µ–º–µ. –û–±—ä–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏.</p>
                </div>
              </div>
              
              <div className="page-footer">
                <div className="signatures">
                  <div className="signature-block">
                    <p>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</p>
                    <p>_________________</p>
                    <p>–ò–≤–∞–Ω–æ–≤ –ê.–ü.</p>
                    <p>15.01.2024</p>
                  </div>
                  <div className="signature-block">
                    <p>–ó–∞—è–≤–∏—Ç–µ–ª—å:</p>
                    <p>_________________</p>
                    <p>–ü–µ—Ç—Ä–æ–≤ –í.–°.</p>
                    <p>15.01.2024</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderReportFilters = () => (
    <div className="modal-overlay">
      <div className="filters-modal">
        <div className="modal-header">
          <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –æ—Ç—á–µ—Ç–∞</h3>
          <button 
            className="close-btn"
            onClick={() => dispatch(setShowReportFilters(false))}
          >
            ‚úï
          </button>
        </div>
        
        <div className="modal-content">
          <div className="filters-form">
            <div className="form-group">
              <label>–ü–µ—Ä–∏–æ–¥:</label>
              <select 
                value={reportFilters.period}
                onChange={(e) => setReportFilters({...reportFilters, period: e.target.value})}
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥</option>
                <option value="2024-01">–Ø–Ω–≤–∞—Ä—å 2024</option>
                <option value="2024-02">–§–µ–≤—Ä–∞–ª—å 2024</option>
                <option value="2024-Q1">1 –∫–≤–∞—Ä—Ç–∞–ª 2024</option>
                <option value="2024">2024 –≥–æ–¥</option>
              </select>
            </div>
            
            <div className="form-group">
              <label>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:</label>
              <select 
                value={reportFilters.organization}
                onChange={(e) => setReportFilters({...reportFilters, organization: e.target.value})}
              >
                <option value="">–í—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</option>
                <option value="org1">–û–û–û "–≠–Ω–µ—Ä–≥–æ–°—Ç—Ä–æ–π"</option>
                <option value="org2">–ò–ü –°–∏–¥–æ—Ä–æ–≤</option>
                <option value="org3">–û–û–û "–¢–µ—Ö–°—Ç—Ä–æ–π"</option>
              </select>
            </div>
            
            <div className="form-group">
              <label>–†–µ–≥–∏–æ–Ω:</label>
              <select 
                value={reportFilters.region}
                onChange={(e) => setReportFilters({...reportFilters, region: e.target.value})}
              >
                <option value="">–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã</option>
                <option value="moscow">–ú–æ—Å–∫–≤–∞</option>
                <option value="spb">–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</option>
                <option value="other">–î—Ä—É–≥–∏–µ —Ä–µ–≥–∏–æ–Ω—ã</option>
              </select>
            </div>
            
            <div className="form-group">
              <label>–î–∏–∞–ø–∞–∑–æ–Ω –º–æ—â–Ω–æ—Å—Ç–∏:</label>
              <select 
                value={reportFilters.power_range}
                onChange={(e) => setReportFilters({...reportFilters, power_range: e.target.value})}
              >
                <option value="">–í—Å–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã</option>
                <option value="0-15">–î–æ 15 –∫–í—Ç</option>
                <option value="15-150">15-150 –∫–í—Ç</option>
                <option value="150-670">150-670 –∫–í—Ç</option>
                <option value="670+">–°–≤—ã—à–µ 670 –∫–í—Ç</option>
              </select>
            </div>
          </div>
          
          <div className="modal-actions">
            <button 
              className="btn-cancel"
              onClick={() => dispatch(setShowReportFilters(false))}
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button 
              className="btn-apply"
              onClick={() => {
                handleGenerateReport(ui.selectedForm?.id);
                dispatch(setShowReportFilters(false));
              }}
            >
              –ü—Ä–∏–º–µ–Ω–∏—Ç—å
            </button>
          </div>
        </div>
      </div>
    </div>
  );

  const renderPrintSettings = () => (
    <div className="modal-overlay">
      <div className="settings-modal">
        <div className="modal-header">
          <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—á–∞—Ç–∏</h3>
          <button 
            className="close-btn"
            onClick={() => dispatch(setShowPrintSettings(false))}
          >
            ‚úï
          </button>
        </div>
        
        <div className="modal-content">
          <div className="settings-form">
            <div className="form-group">
              <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ø–∏–π:</label>
              <input 
                type="number" 
                min="1" 
                max="10"
                value={printSettings.copies}
                onChange={(e) => handlePrintSettingsChange('copies', parseInt(e.target.value))}
              />
            </div>
            
            <div className="form-group">
              <label>–û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è:</label>
              <select 
                value={printSettings.orientation}
                onChange={(e) => handlePrintSettingsChange('orientation', e.target.value)}
              >
                <option value="portrait">–ö–Ω–∏–∂–Ω–∞—è</option>
                <option value="landscape">–ê–ª—å–±–æ–º–Ω–∞—è</option>
              </select>
            </div>
            
            <div className="form-group">
              <label>–†–∞–∑–º–µ—Ä –±—É–º–∞–≥–∏:</label>
              <select 
                value={printSettings.paperSize}
                onChange={(e) => handlePrintSettingsChange('paperSize', e.target.value)}
              >
                <option value="A4">A4</option>
                <option value="A3">A3</option>
                <option value="A5">A5</option>
              </select>
            </div>
            
            <div className="form-group">
              <label>–ü–æ–ª—è:</label>
              <select 
                value={printSettings.margins}
                onChange={(e) => handlePrintSettingsChange('margins', e.target.value)}
              >
                <option value="normal">–û–±—ã—á–Ω—ã–µ</option>
                <option value="narrow">–£–∑–∫–∏–µ</option>
                <option value="wide">–®–∏—Ä–æ–∫–∏–µ</option>
              </select>
            </div>
            
            <div className="form-group">
              <label>–ö–∞—á–µ—Å—Ç–≤–æ:</label>
              <select 
                value={printSettings.quality}
                onChange={(e) => handlePrintSettingsChange('quality', e.target.value)}
              >
                <option value="draft">–ß–µ—Ä–Ω–æ–≤–∏–∫</option>
                <option value="normal">–û–±—ã—á–Ω–æ–µ</option>
                <option value="high">–í—ã—Å–æ–∫–æ–µ</option>
              </select>
            </div>
          </div>
          
          <div className="modal-actions">
            <button 
              className="btn-cancel"
              onClick={() => dispatch(setShowPrintSettings(false))}
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button 
              className="btn-apply"
              onClick={() => dispatch(setShowPrintSettings(false))}
            >
              –ü—Ä–∏–º–µ–Ω–∏—Ç—å
            </button>
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="print-forms">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
      <div className="forms-header">
        <div className="header-content">
          <h1>
            <span className="icon">üñ®Ô∏è</span>
            –ü–µ—á–∞—Ç–Ω—ã–µ –∏ –æ—Ç—á–µ—Ç–Ω—ã–µ —Ñ–æ—Ä–º—ã –ê–°–£–¢–ü
          </h1>
          <p>–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—á–∞—Ç–Ω—ã—Ö —Ñ–æ—Ä–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –æ—Ç—á–µ—Ç–Ω—ã—Ö —Ñ–æ—Ä–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö</p>
        </div>
        <div className="header-stats">
          <div className="stat-item">
            <span className="stat-number">{printForms.length}</span>
            <span className="stat-label">–ü–µ—á–∞—Ç–Ω—ã—Ö —Ñ–æ—Ä–º</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">{reportForms.length}</span>
            <span className="stat-label">–û—Ç—á–µ—Ç–Ω—ã—Ö —Ñ–æ—Ä–º</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">{documents.length}</span>
            <span className="stat-label">–î–æ–∫—É–º–µ–Ω—Ç–æ–≤</span>
          </div>
        </div>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <div className="tabs-section">
        <div className="tabs">
          <button 
            className={`tab ${ui.activeTab === 'print' ? 'active' : ''}`}
            onClick={() => handleTabChange('print')}
          >
            <span className="icon">üìÑ</span>
            –ü–µ—á–∞—Ç–Ω—ã–µ —Ñ–æ—Ä–º—ã
          </button>
          <button 
            className={`tab ${ui.activeTab === 'report' ? 'active' : ''}`}
            onClick={() => handleTabChange('report')}
          >
            <span className="icon">üìä</span>
            –û—Ç—á–µ—Ç–Ω—ã–µ —Ñ–æ—Ä–º—ã
          </button>
          <button 
            className={`tab ${ui.activeTab === 'documents' ? 'active' : ''}`}
            onClick={() => handleTabChange('documents')}
          >
            <span className="icon">üìã</span>
            –î–æ–∫—É–º–µ–Ω—Ç—ã
          </button>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="actions-section">
        <button 
          className="btn-settings"
          onClick={() => dispatch(setShowPrintSettings(true))}
        >
          <span className="icon">‚öôÔ∏è</span>
          –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—á–∞—Ç–∏
        </button>
        <button 
          className="btn-history"
          onClick={() => handleTabChange('history')}
        >
          <span className="icon">üìú</span>
          –ò—Å—Ç–æ—Ä–∏—è –ø–µ—á–∞—Ç–∏
        </button>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ */}
      {ui.activeTab === 'print' && renderPrintFormsTab()}
      {ui.activeTab === 'report' && renderReportFormsTab()}
      {ui.activeTab === 'documents' && renderDocumentsTab()}

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      {ui.showPrintPreview && renderPrintPreview()}
      {ui.showReportFilters && renderReportFilters()}
      {ui.showPrintSettings && renderPrintSettings()}
    </div>
  );
};

export default PrintForms; 